// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id Int @id @default(autoincrement())
  name String @unique
  quantity Int @default(1)
  imageUrl String @default("")
  price Int @default(999)
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  createdAt DateTime @default(now())
  order_item OrderItem[]
}

model Order {
  id Int @id @default(autoincrement())
  orderId String
  customer Customer @relation(fields: [customerId], references: [id])
  status String @default("pending")
  customerId Int
  order_item OrderItem[]
  createdAt DateTime @default(now())
}
model OrderItem{
  id Int @id @default(autoincrement())
  orderId Int
  productName String
  productPrice Int
  productCount Int
  order Order @relation(fields: [orderId], references: [id])
  productId Int
  product Product @relation(fields: [productId], references: [id])
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  products Product[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Customer {
  id       Int        @id @default(autoincrement())
  name     String
  email    String     @unique
  password String
  passcode Int
  order Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

